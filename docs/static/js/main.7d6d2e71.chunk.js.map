{"version":3,"sources":["index.js"],"names":["keySound","key","src","name","DrumMachine","props","className","Display","id","map","sound","i","DisplayContainer","nameKey","audio","codeKey","code","React","Component","handlePlay","e","current","play","document","getElementById","innerHTML","createRef","window","addEventListener","toUpperCase","console","log","this","onClick","onKeyDown","handleKey","ref","ReactDOM","render"],"mappings":"qNAIMA,G,MAAW,CACf,CACEC,IAAK,IACLC,IAAK,2DACLC,KAAM,WAER,CACEF,IAAK,IACLC,IAAK,2DACLC,KAAM,WAER,CACEF,IAAK,IACLC,IAAK,2DACLC,KAAM,WAER,CACEF,IAAK,IACLC,IAAK,6DACLC,KAAM,WAER,CACEF,IAAK,IACLC,IAAK,2DACLC,KAAM,WAER,CACEF,IAAK,IACLC,IAAK,yDACLC,KAAM,WAER,CACEF,IAAK,IACLC,IAAK,6DACLC,KAAM,WAER,CACEF,IAAK,IACLC,IAAK,6DACLC,KAAM,WAER,CACEF,IAAK,IACLC,IAAK,yDACLC,KAAM,aAIJC,E,kDACJ,WAAYC,GAAQ,uCACZA,G,qDAIN,OACE,qCACE,8CACA,wEACA,qBAAKC,UAAU,8BAAf,SACE,cAACC,EAAD,MAEF,gCACE,qBAAKC,GAAG,eAAeF,UAAU,8BAAjC,SACGN,EAASS,KAAI,SAACC,EAAOC,GAAR,OACZ,cAACC,EAAD,CACEC,QAASH,EAAMT,IAEfE,KAAMO,EAAMP,KACZW,MAAOJ,EAAMR,IACba,QAASL,EAAMM,MAHVL,QAOX,2D,GAzBgBM,IAAMC,WAgC1BX,EAAU,WACd,OACE,qBAAKD,UAAU,oBAAf,SACE,mBAAGA,UAAU,oCAAoCE,GAAG,eAKpDI,E,kDACJ,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IAcRc,WAAa,SAAAC,GACX,EAAKN,MAAMO,QAAQC,OACnBC,SAASC,eAAe,WAAWC,UAAY,EAAKpB,MAAMF,MAd1D,EAAKW,MAAQG,IAAMS,YAEnBC,OAAOJ,SAASK,iBAAiB,WAAW,SAAAR,GACtCA,EAAEnB,IAAI4B,gBAAkBxB,EAAMQ,UAChCU,SAASC,eAAe,WAAWC,UACjC,cAAgB,EAAKpB,MAAMF,KAC7B,EAAKW,MAAMO,QAAQC,OACnBQ,QAAQC,IAAIX,EAAEnB,SAVD,E,qDAoBT,IAAD,EAC0B+B,KAAK3B,MAA9BQ,EADD,EACCA,QAASC,EADV,EACUA,MAAOX,EADjB,EACiBA,KAExB,OACE,mCACE,sBACEG,UAAU,oCACVE,GAAIL,EACJ8B,QAASD,KAAKb,WACde,UAAWF,KAAKG,UAJlB,UAMGtB,EACD,uBAAOuB,IAAKJ,KAAKlB,MAAOZ,IAAKY,EAAOR,UAAU,OAAOE,GAAIK,a,GAjCpCI,IAAMC,WAwCrCmB,IAASC,OAAO,cAAClC,EAAD,IAAiBmB,SAASC,eAAe,W","file":"static/js/main.7d6d2e71.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\n\nconst keySound = [\n  {\n    key: 'Q',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\n    name: 'Sound Q',\n  },\n  {\n    key: 'W',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\n    name: 'Sound W',\n  },\n  {\n    key: 'E',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n    name: 'Sound E',\n  },\n  {\n    key: 'A',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\n    name: 'Sound A',\n  },\n  {\n    key: 'S',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\n    name: 'Sound S',\n  },\n  {\n    key: 'D',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\n    name: 'Sound D',\n  },\n  {\n    key: 'Z',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\n    name: 'Sound Z',\n  },\n  {\n    key: 'X',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\n    name: 'Sound X',\n  },\n  {\n    key: 'C',\n    src: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\n    name: 'Sound C',\n  },\n];\n\nclass DrumMachine extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Drum Machine</h1>\n        <h3>Click or press a key to play the audio</h3>\n        <div className=\"container__display__message\">\n          <Display />\n        </div>\n        <div>\n          <div id=\"drum-machine\" className=\"container__display drum-pad\">\n            {keySound.map((sound, i) => (\n              <DisplayContainer\n                nameKey={sound.key}\n                key={i}\n                name={sound.name}\n                audio={sound.src}\n                codeKey={sound.code}\n              />\n            ))}\n          </div>\n          <footer>by LuismGil</footer>\n        </div>\n      </>\n    );\n  }\n}\n\nconst Display = () => {\n  return (\n    <div className=\"display-container\">\n      <p className=\"container__display__message--text\" id=\"display\"></p>\n    </div>\n  );\n};\n\nclass DisplayContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.audio = React.createRef();\n\n    window.document.addEventListener('keydown', e => {\n      if (e.key.toUpperCase() === props.nameKey) {\n        document.getElementById('display').innerHTML =\n          'Is playing ' + this.props.name;\n        this.audio.current.play();\n        console.log(e.key);\n      }\n    });\n  }\n\n  handlePlay = e => {\n    this.audio.current.play();\n    document.getElementById('display').innerHTML = this.props.name;\n  };\n\n  render() {\n    const { nameKey, audio, name } = this.props;\n\n    return (\n      <>\n        <div\n          className=\"drum-pad container__display__keys\"\n          id={name}\n          onClick={this.handlePlay}\n          onKeyDown={this.handleKey}\n        >\n          {nameKey}\n          <audio ref={this.audio} src={audio} className=\"clip\" id={nameKey} />\n        </div>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<DrumMachine />, document.getElementById('root'));\n"],"sourceRoot":""}